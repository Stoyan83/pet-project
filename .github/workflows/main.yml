name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: pet_project_test
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

        ports: ['5432:5432']
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install

      - name: Setup Node.js environment
        uses: actions/setup-node@master
        with:
          node-version: 16

      - name: Cache node_modules
        uses: actions/cache@v2.1.0
        with:
          path: node_modules
          key: ubuntu-latest-node-v16-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Run ESLint
        run: npm run lint

      - name: Code coverage
        uses: codecov/codecov-action@v1.0.12

      - name: Build and run tests
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/pet_project_test
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec rake db:prepare
          bundle exec rspec
          run: npm run test:unit
